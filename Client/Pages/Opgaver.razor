@page "/opgaver"

@inject HttpClient Http1
@using festivalbooking.Shared;





            @if (opgaver == null)
        {
            <p><em>Either data is being fetched or something isnt working, lets hope for the former</em></p>
        }
           
       
        else
        {
        <div class="div-nevlink">
         <NavLink class="nav-link" href="/vagt" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Vagter
            </NavLink>
             <NavLink class="nav-link" href="/frivillig" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Frivillige
            </NavLink>
            
             <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Log ud
            </NavLink>
        </div>       
    <div class="div-layout">           
    <h3>Opret opgave</h3>

    <label>Opgave navn</label><br>
    <input @bind-value="opgave.opgave_navn" placeholder="Skriv her"/>
    <p></p>
    <label>Status på opgave</label><br>
     <select multiple>
                 @foreach(var status in status){
                       <option value="@status.status_id'" @onclick="@(()=>bindSid(@status))"> @status.status_navn</option>
                 }
             </select>
            <p></p>
            <label>Beskrivelse</label><br>
             <input @bind-value="opgave.opgave_beskrivelse" placeholder="Skriv her"/>
             <p></p>
             <input type="checkbox" @bind="opgave.er_team_opgave"><label>Team Opgave?</label><br>
             <p></p>
             <button class="btn btn-sm btn-primary" @onclick="@(()=>postOpgave(@opgave))">Opret</button>
            </div>
            <p></p>
            <div class="div-layout">
             <h3>Opgave oversigt</h3>
             <h4>Sortér:</h4>
             <button class="btn btn-sm btn-primary" @onclick="@(()=>sortOpgaverByStatus())">sorter efter område</button>
             <p></p>
             <h4>filtrér:</h4>
               <select multiple>
                 @foreach(var status1 in status){
                       <option value="@status1.status_id'" @onclick="@(()=>getOpgaverByStatus(@status1.status_id))"> @status1.status_navn</option>
                 }
             </select>
             <p></p>
              
 <table class="table table-responsive"> 
    <thead>
        <th>Opgave Navn</th>
        <th>Status</th>
        <th>Beskrivelse</th>
        <th>Antal personer skrevet på</th>
        <th>Team opgave</th>
    </thead>
    <tbody>
          @foreach (var item in opgaver){
        <tr>
          
              <td>@item.opgave_navn</td>
              
              <td> @item.status_navn</td>
        
              <td>@item.opgave_beskrivelse</td>
             
              <td>@item.antal_personer_skrevet_på</td>
              @if (item.er_team_opgave == false){
                  <td>ikke en team-opgave</td>
                
              }else {
                  <td>team-opgave</td>
                   
              }
                <td>
                           
                </td>
                 <td>
                          
                </td>
                @if (@item.er_last == false){
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="@(()=>toggleEdit(@item.opgave_id))"><i Class="oi oi-pencil"></i></button><br>
                    </td>
                <td>
                            <button class="btn btn-sm btn-primary" @onclick="@(()=>låsEllerÅbenOpgave(@item))">Lås Opgave</button>
                </td>
                }else {
                    <td>
                            <button class="btn btn-sm btn-primary" @onclick="@(()=>låsEllerÅbenOpgave(@item))">Lås Opgave op</button>
                    </td>
                }
                 
                 </tr>
          } 
       
        
    </tbody>
 </table>

        @if(isEdit == true){
           <p>Opgave ID: @opgave.opgave_id</p>
            <label>Opgave navn</label><br>
             <input @bind-value="opgave.opgave_navn" placeholder="Skriv her" /><br>
             <p></p>
            <label>Opgave beskrivelse</label><br>
             <input @bind-value="opgave.opgave_beskrivelse" placeholder="Skriv her" /><br>
             <p></p>
            <label>Opgave status</label><br>
                 <select multiple>
                 @foreach(var item1 in status){
                       <option value="@item1.status_id'" @onclick="@(()=>bindSid(@item1))"> @item1.status_navn</option>
                 }
             </select><br>
             <input type="checkbox" @bind="opgave.er_team_opgave"><label>Team Opagave?</label><br>
             <button class="btn btn-sm btn-primary" @onclick="@(()=>patchOpgave(@opgave.opgave_id))">Bekræft ændringer</button>
             <button class="btn btn-sm btn-primary" @onclick="@(()=>DeleteOpgave(@opgave.opgave_id))" style="background-color: red;">Slet Opgave</button>
        }
        </div>
        }      
         
 
        
@code{
  
    
    private vagt_statusDTO [] status;
    private opgaveDTO opgave = new opgaveDTO();
    private opgaveDTO[] opgaver;
     private bool isEdit = false; 
protected override async Task OnInitializedAsync()
{
   
    opgaver = await Http1.GetFromJsonAsync<opgaveDTO[]>("api/omrader");
         status = await Http1.GetFromJsonAsync<vagt_statusDTO[]>("api/status");
   
 
}
  private async Task getOpgaverByStatus(int id)
  {
        opgaver = await Http1.GetFromJsonAsync<opgaveDTO[]>($"api/status/{id}");
        //await OnInitializedAsync();

  }
   private async Task sortOpgaverByStatus()
    {
        opgaver = await Http1.GetFromJsonAsync<opgaveDTO[]>("api/status/sort");
        //await OnInitializedAsync();

    }

 private async Task DeleteOpgave(int id)
    {
     
    
    await Http1.DeleteAsync($"api/opgaver/{id}");
    await OnInitializedAsync();
    }

    private async Task postOpgave(opgaveDTO opgave)
{
    await Http1.PostAsJsonAsync<opgaveDTO>("api/opgaver", opgave);
    await OnInitializedAsync();
}
private async Task patchOpgave(int opgave_id)
{
         
    await Http1.PutAsJsonAsync<opgaveDTO>($"api/opgaver/{opgave_id}", opgave);
    await OnInitializedAsync();
}

    private async Task låsEllerÅbenOpgave(opgaveDTO opgave)
    {
    await Http1.PutAsJsonAsync<opgaveDTO>($"api/opgaver/las/{opgave.opgave_id}", opgave);
   await OnInitializedAsync();
    }
 private void bindSid(vagt_statusDTO status)
    {
        opgave.status_id = status.status_id;
        opgave.status_navn = status.status_navn;
        //Console.WriteLine($"{vagt.område_id}");


    }
  
  private bool toggleEdit (int id){
        if (isEdit == true){
           opgave.opgave_id = 0;
return isEdit = false;
        }
        opgave.opgave_id = id;
        return isEdit = true; 
    }
    
}



