@page "/"
@using festivalbooking.Shared;
@inject HttpClient Http

            @if (vagter == null)
        {
            <p><em>Either data is being fetched or something isnt working, lets hope for the former</em></p>
        }
             else if (områder == null)
             {
                     <p><em>Either data is being fetched or something isnt working, lets hope for the former</em></p>
             }
       
        else
        {
            <h2>Lille app til at demonstrere hvordan man bygger en controller samt service layer med simpel CRUD funktionalitet VHA. Dapper og C# </h2>

        <p>I disse felter kan man skrive et input, ønsker man at uploade det til databasen trykker man blot på "POST DIS"</p>
        <p>ønsker man at ændre i en entry, skriver man blot inde i den givne entry's felter og trykker herefter på "EDIT DIS"</p>
        <input @bind-value="vagt.start" placeholder="string" />
        <input @bind-value="vagt.slut" placeholder="double" />  
          <select id="områder1" multiple>
            @foreach (var item2 in områder)
            {
             
                    <option value="@item2.område_id" @onclick="@(()=>bindId(@item2))"> @item2.område_navn</option>
                    }
                </select>          
        <button class="btn btn-sm btn-primary" @onclick="@(()=>postVagt(@vagt))">POST DIS</button>
        <p>Liste over entries</p>
            <table class="table table-responsive">
                <thead>
                    <tr>
                        <th>Start tid</th>
                        <th>Slut tid</th>
                        <th>
                            
                        </th>
                        <th>
                            område
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in vagter)
                    {
                    <tr>
                        <td>@item.start</td>
                          <input @bind-value="vagt.start" placeholder="string" />
                        <td>@item.slut</td>
                          <input @bind-value="vagt.slut" placeholder="double" />
                        <td>@item.område_navn</td>
                           
        <select id="områder" multiple>
            @foreach (var item1 in områder)
            {
             
                    <option value="@item1.område_id'" @onclick="@(()=>bindId(@item1))"> @item1.område_navn</option>
                    }
                </select>
                        <td>
                            <button class="btn btn-sm btn-primary" @onclick="@(()=>DeleteVagt(@item.vagt_id))">DELET DIS</button>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-primary" @onclick="@(()=>patchVagt(@item.vagt_id))">EDIT DIS</button>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        }
@code{
private vagtDTO[] vagter;

private vagt_områderDTO[] områder;


private vagtDTO vagt = new vagtDTO();
protected override async Task OnInitializedAsync()
{
    vagter = await Http.GetFromJsonAsync<vagtDTO[]>("api/Vagt");
    områder = await Http.GetFromJsonAsync<vagt_områderDTO[]>("api/omrader");
}
 private async Task DeleteVagt(int id)
    {
     
    
    await Http.DeleteAsync($"api/Vagt/{id}");
    await OnInitializedAsync();
    }

private async Task postVagt(vagtDTO vagt)
{
    await Http.PostAsJsonAsync<vagtDTO>("api/Vagt", vagt);
    await OnInitializedAsync();
}
private async Task patchVagt(int vagt_id){
          vagt.vagt_id = vagt_id; 
    await Http.PutAsJsonAsync<vagtDTO>($"api/Vagt/{vagt_id}", vagt);
    await OnInitializedAsync();
}
   private void bindId(vagt_områderDTO område)
    {
        vagt.område_id = område.område_id;
        vagt.område_navn = område.område_navn;
        //Console.WriteLine($"{vagt.område_id}");


    }
}



